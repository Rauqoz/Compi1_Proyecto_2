start:	lista
;

lista:	r_public principal lista
	|	
;

principal:	r_class r_id l_abrir lmetodos l_cerrar
	|	r_interface r_id l_abrir lmetodosdefiniciones l_cerrar
;

lmetodos:	r_public metodos lmetodos
	|	declaracion lmetodos
	|	
;

metodos:	r_static r_void r_main p_abrir r_string c_abrir c_cerrar r_args p_cerrar l_abrir linstrucciones l_cerrar
	|	r_void r_id p_abrir lparametros p_cerrar l_abrir linstrucciones l_cerrar
	|	ltipos r_id p_abrir lparametros p_cerrar l_abrir linstrucciones l_cerrar
;

lparametros:	ltipos r_id parametros
	|	
;

parametros:	r_coma ltipos r_id parametros
	|	
;

ltipos:		r_int
	|	r_double
	|	r_string
	|	r_char
	|	r_bool
;

linstrucciones:		declaracion linstrucciones
	|	r_id seleccionid linstrucciones
	|	r_return lreturn linstrucciones
	|	r_continue r_puntocoma linstrucciones
	|	r_break r_puntocoma linstrucciones
	|	prints linstrucciones
	|	mif linstrucciones
	|	mfor linstrucciones
	|	mwhile linstrucciones
	|	mdo linstrucciones
	|	
;

declaracion: ltipos r_id ldeclaracion r_puntocoma
;

ldeclaracion:	r_coma r_id ldeclaracion
	|	r_igual lexpresion mdeclaracion
	|	
;

mdeclaracion:	r_coma r_id ldeclaracion
	|	
;

lexpresion:	r_mas expresion
	|	r_menos expresion
	|	expresion
;

expresion:	r_numero operacion
	|	r_cadena operacion
	|	r_caracter operacion
	|	booleano operacion
	|	r_id emetodo operacion
	|	p_abrir lexpresion p_cerrar operacion
	|	r_not expresion operacion
;

operacion:	r_mas expresion
	|	r_menos expresion
	|	r_asterisco expresion
	|	r_diagonal expresion
	|	r_masmas operacion
	|	r_menosmenos operacion
	|	r_menor expresion
	|	r_mayor expresion
	|	r_mayorigual expresion
	|	r_menorigual expresion
	|	r_igualigual expresion
	|	r_notigual expresion
	|	r_and expresion
	|	r_or expresion
	|	r_xor expresion
	|	
;

booleano:	r_true
	|	r_false
;

emetodo:	p_abrir lvalores p_cerrar
	|	
;

lvalores:	expresion valores
	|	
;

valores:	r_coma lexpresion valores
	|	
;

seleccionid: 	p_abrir lvalores p_cerrar r_puntocoma
	|	r_igual lexpresion r_puntocoma
	|	r_masmas r_puntocoma
	|	r_menosmenos r_puntocoma
;

lreturn: 	lexpresion r_puntocoma
	|	r_puntocoma
;

prints:		r_fprint p_abrir lexpresion p_cerrar r_puntocoma
	|	r_fprintln p_abrir lexpresion p_cerrar r_puntocoma
;

prints:		r_system r_punto r_out r_punto lprints p_abrir lexpresion p_cerrar r_puntocoma
;

lprints:	r_print
	|	r_println
;

mif:		r_if p_abrir lexpresion p_cerrar l_abrir linstrucciones l_cerrar lif
;

lif:		r_else melse
	|	
;

melse:		r_if p_abrir lexpresion p_cerrar l_abrir linstrucciones l_cerrar lif
	|	l_abrir linstrucciones l_cerrar lif
;

mfor:		r_for p_abrir declaracion lexpresion r_puntocoma lexpresion p_cerrar l_abrir linstrucciones l_cerrar
;

mwhile:		r_while p_abrir lexpresion p_cerrar l_abrir linstrucciones l_cerrar 
;

mdo:		r_do l_abrir linstrucciones l_cerrar r_while p_abrir lexpresion p_cerrar r_puntocoma
;

lmetodosdefiniciones:	r_public metodosdefiniciones lmetodosdefiniciones
	|	declaracion lmetodosdefiniciones
	|	
;

metodosdefiniciones:	r_void r_id p_abrir lparametros p_cerrar r_puntocoma
	|	ltipos r_id p_abrir lparametros p_cerrar r_puntocoma
;